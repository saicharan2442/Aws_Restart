{"filter":false,"title":"sada14.py","tooltip":"/sada14.py","undoManager":{"mark":77,"position":77,"stack":[[{"start":{"row":0,"column":0},"end":{"row":32,"column":0},"action":"remove","lines":["{","   \"molecules\":{","      \"lsInsulin\":\"malwmrllpllallalwgpdpaaa\",","      \"bInsulin\":\"fvnqhlcgshlvealylvcgergffytpkt\",","      \"aInsulin\":\"giveqcctsicslyqlenycn\",","      \"cInsulin\":\"rreaedlqvgqvelgggpgagslqplalegslqkr\"","   },","   \"weights\":{","      \"A\":89.09,","      \"C\":121.16,","      \"D\":133.10,","      \"E\":147.13,","      \"F\":165.19,","      \"G\":75.07,","      \"H\":155.16,","      \"I\":131.17,","      \"K\":146.19,","      \"L\":131.17,","      \"M\":149.21,","      \"N\":132.12,","      \"P\":115.13,","      \"Q\":146.15,","      \"R\":174.20,","      \"S\":105.09,","      \"T\":119.12,","      \"V\":117.15,","      \"W\":204.23,","      \"Y\":181.19","   },","   \"molecularWeightInsulinActual\":5807.63","}","",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["Exercise 1: Creating the JSON molecules data file",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["#"],"id":5}],[{"start":{"row":0,"column":50},"end":{"row":0,"column":51},"action":"insert","lines":[" "],"id":6},{"start":{"row":0,"column":51},"end":{"row":0,"column":52},"action":"insert","lines":[">"]}],[{"start":{"row":0,"column":52},"end":{"row":0,"column":53},"action":"insert","lines":[">"],"id":7}],[{"start":{"row":0,"column":53},"end":{"row":0,"column":54},"action":"insert","lines":[" "],"id":8}],[{"start":{"row":0,"column":54},"end":{"row":0,"column":55},"action":"insert","lines":["i"],"id":9},{"start":{"row":0,"column":55},"end":{"row":0,"column":56},"action":"insert","lines":["n"]},{"start":{"row":0,"column":56},"end":{"row":0,"column":57},"action":"insert","lines":["s"]},{"start":{"row":0,"column":57},"end":{"row":0,"column":58},"action":"insert","lines":["y"]}],[{"start":{"row":0,"column":57},"end":{"row":0,"column":58},"action":"remove","lines":["y"],"id":10}],[{"start":{"row":0,"column":57},"end":{"row":0,"column":58},"action":"insert","lines":["u"],"id":11}],[{"start":{"row":0,"column":58},"end":{"row":0,"column":59},"action":"insert","lines":["l"],"id":12},{"start":{"row":0,"column":59},"end":{"row":0,"column":60},"action":"insert","lines":["i"]},{"start":{"row":0,"column":60},"end":{"row":0,"column":61},"action":"insert","lines":["n"]},{"start":{"row":0,"column":61},"end":{"row":0,"column":62},"action":"insert","lines":["e"]},{"start":{"row":0,"column":62},"end":{"row":0,"column":63},"action":"insert","lines":["."]},{"start":{"row":0,"column":63},"end":{"row":0,"column":64},"action":"insert","lines":["j"]}],[{"start":{"row":0,"column":64},"end":{"row":0,"column":65},"action":"insert","lines":["s"],"id":13},{"start":{"row":0,"column":65},"end":{"row":0,"column":66},"action":"insert","lines":["o"]},{"start":{"row":0,"column":66},"end":{"row":0,"column":67},"action":"insert","lines":["n"]}],[{"start":{"row":0,"column":61},"end":{"row":0,"column":62},"action":"remove","lines":["e"],"id":14}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Exercise 2: Creating the JSON file handler module",""],"id":16}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["#"],"id":17}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["import json",""],"id":18}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["def readJsonFile(fileName):",""],"id":19}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["data=\"\"         ",""],"id":20}],[{"start":{"row":6,"column":0},"end":{"row":10,"column":15},"action":"insert","lines":["def readJsonFile(fileName):","    data = \"\"","    with open('files/insulin.json') as json_file:","        data = json.load(json_file)","    return data"],"id":21}],[{"start":{"row":10,"column":15},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":22},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":11,"column":0},"end":{"row":20,"column":15},"action":"insert","lines":["import json","","def readJsonFile(fileName):","    data = \"\"","    try:","        with open(fileName) as json_file:","            data = json.load(json_file)","    except IOError:","        print(\"Could not read file\")","    return data"],"id":23}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":24}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":19},"action":"remove","lines":["    return data    "],"id":25},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["Exercise 3: Creating the main program",""],"id":26}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"insert","lines":["#"],"id":27}],[{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["import jsonFileHandler",""],"id":28}],[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["data = jsonFileHandler.readJsonFile('files/insulin.json')",""],"id":29}],[{"start":{"row":25,"column":0},"end":{"row":34,"column":35},"action":"insert","lines":["if data != \"\" :","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","    print('bInsulin: ' + bInsulin)","    print('aInsulin: ' + aInsulin)","    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))","else:","    print(\"Error. Exiting program\")"],"id":30}],[{"start":{"row":34,"column":35},"end":{"row":35,"column":0},"action":"insert","lines":["",""],"id":31},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":4},"end":{"row":36,"column":0},"action":"insert","lines":["",""]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":35,"column":0},"end":{"row":37,"column":37},"action":"insert","lines":["bInsulin: fvnqhlcgshlvealylvcgergffytpkt","aInsulin: giveqcctsicslyqlenycn","molecularWeightInsulinActual: 5807.63"],"id":32}],[{"start":{"row":37,"column":37},"end":{"row":37,"column":41},"action":"remove","lines":["    "],"id":33},{"start":{"row":37,"column":37},"end":{"row":38,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":35,"column":0},"end":{"row":37,"column":37},"action":"remove","lines":["bInsulin: fvnqhlcgshlvealylvcgergffytpkt","aInsulin: giveqcctsicslyqlenycn","molecularWeightInsulinActual: 5807.63"],"id":34}],[{"start":{"row":12,"column":11},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":35}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"insert","lines":[" "],"id":36}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"remove","lines":[" "],"id":37}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":[" "],"id":38},{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"insert","lines":[" "]},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":3},"action":"remove","lines":["   "],"id":39}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":[" "],"id":40}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"remove","lines":[" "],"id":41}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":8},"action":"remove","lines":["data=\"\" "],"id":42}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":27},"action":"remove","lines":["def readJsonFile(fileName):"],"id":43}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["''"],"id":44}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["'"],"id":45}],[{"start":{"row":34,"column":0},"end":{"row":34,"column":2},"action":"insert","lines":["''"],"id":46}],[{"start":{"row":34,"column":2},"end":{"row":34,"column":3},"action":"insert","lines":["'"],"id":47}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":48}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":2},"action":"insert","lines":["''"],"id":49}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"insert","lines":["'"],"id":50}],[{"start":{"row":35,"column":2},"end":{"row":35,"column":3},"action":"remove","lines":["'"],"id":51},{"start":{"row":35,"column":1},"end":{"row":35,"column":2},"action":"remove","lines":["'"]},{"start":{"row":35,"column":0},"end":{"row":35,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":12,"column":2},"end":{"row":12,"column":3},"action":"remove","lines":["'"],"id":52},{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"remove","lines":["'"]},{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"remove","lines":["'"],"id":53},{"start":{"row":3,"column":1},"end":{"row":3,"column":2},"action":"remove","lines":["'"]},{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":4,"column":11},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":54},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["i"]},{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"insert","lines":["m"]},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"insert","lines":["p"]},{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"insert","lines":["o"]}],[{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"insert","lines":["r"],"id":55},{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"insert","lines":["t"]}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"insert","lines":[" "],"id":56}],[{"start":{"row":5,"column":7},"end":{"row":5,"column":22},"action":"insert","lines":["jsonFileHandler"],"id":57}],[{"start":{"row":10,"column":19},"end":{"row":10,"column":20},"action":"remove","lines":["s"],"id":59},{"start":{"row":10,"column":18},"end":{"row":10,"column":19},"action":"remove","lines":["e"]},{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"remove","lines":["l"]},{"start":{"row":10,"column":16},"end":{"row":10,"column":17},"action":"remove","lines":["i"]},{"start":{"row":10,"column":15},"end":{"row":10,"column":16},"action":"remove","lines":["f"]}],[{"start":{"row":25,"column":41},"end":{"row":25,"column":42},"action":"remove","lines":["s"],"id":60},{"start":{"row":25,"column":40},"end":{"row":25,"column":41},"action":"remove","lines":["e"]},{"start":{"row":25,"column":39},"end":{"row":25,"column":40},"action":"remove","lines":["l"]},{"start":{"row":25,"column":38},"end":{"row":25,"column":39},"action":"remove","lines":["i"]},{"start":{"row":25,"column":37},"end":{"row":25,"column":38},"action":"remove","lines":["f"]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["f"],"id":61},{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["i"]},{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":["l"]},{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":["e"]}],[{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["n"],"id":62},{"start":{"row":6,"column":5},"end":{"row":6,"column":6},"action":"insert","lines":["a"]},{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":["m"]},{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["e"]}],[{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":["="],"id":63}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["i"],"id":64},{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["n"]},{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["s"]},{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["u"]},{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":["l"]},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["i"]}],[{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":["n"],"id":65},{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":["."]},{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"insert","lines":["j"]}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":["s"],"id":66},{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"insert","lines":["o"]},{"start":{"row":6,"column":20},"end":{"row":6,"column":21},"action":"insert","lines":["n"]}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":21},"action":"remove","lines":["json"],"id":67},{"start":{"row":6,"column":17},"end":{"row":6,"column":21},"action":"insert","lines":["json"]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":8},"action":"remove","lines":["filename=insulin.json","        "],"id":68}],[{"start":{"row":37,"column":4},"end":{"row":47,"column":122},"action":"insert","lines":["# Calculating the molecular weight of insulin  ","# Getting a list of the amino acid (AA) weights  ","aaWeights = data['weights']","# Count the number of each amino acids  ","aaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  ","# Multiply the count by the weights  ","molecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in","['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  ","print(\"The rough molecular weight of insulin: \" +","str(molecularWeightInsulin))","print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))"],"id":69}],[{"start":{"row":47,"column":122},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":70}],[{"start":{"row":48,"column":0},"end":{"row":54,"column":32},"action":"insert","lines":["Run the program. You will get the following:","","bInsulin: fvnqhlcgshlvealylvcgergffytpkt","aInsulin: giveqcctsicslyqlenycn","molecularWeightInsulinActual: 5807.63","The rough molecular weight of insulin: 6696.420000000001","Percent error: 15.30383306099047"],"id":71}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":32},"action":"remove","lines":["#Exercise 1: Creating the JSON molecules data file >> insulin.json","","#Exercise 2: Creating the JSON file handler module","","import json","import jsonFileHandler","","def readJsonFile(fileName):","    data = \"\"","    with open('/insulin.json') as json_file:","        data = json.load(json_file)","    return data","","import json","def readJsonFile(fileName):","    data = \"\"","    try:","        with open(fileName) as json_file:","            data = json.load(json_file)","    except IOError:","        print(\"Could not read file\")","","#Exercise 3: Creating the main program","import jsonFileHandler","data = jsonFileHandler.readJsonFile('/insulin.json')","if data != \"\" :","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","    print('bInsulin: ' + bInsulin)","    print('aInsulin: ' + aInsulin)","    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))","else:","    print(\"Error. Exiting program\")","","","    # Calculating the molecular weight of insulin  ","# Getting a list of the amino acid (AA) weights  ","aaWeights = data['weights']","# Count the number of each amino acids  ","aaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  ","# Multiply the count by the weights  ","molecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in","['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  ","print(\"The rough molecular weight of insulin: \" +","str(molecularWeightInsulin))","print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))","Run the program. You will get the following:","","bInsulin: fvnqhlcgshlvealylvcgergffytpkt","aInsulin: giveqcctsicslyqlenycn","molecularWeightInsulinActual: 5807.63","The rough molecular weight of insulin: 6696.420000000001","Percent error: 15.30383306099047"],"id":72},{"start":{"row":0,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["import json","","# Function to read JSON file","def readJsonFile(fileName):","    data = \"\"","    try:","        with open(fileName, 'r') as json_file:","            data = json.load(json_file)","    except IOError:","        print(\"Could not read file\", fileName)","    return data","","# Main program","data = readJsonFile(\"insulin.json\")","","if data != \"\":","    # Extract insulin sequences","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculating the molecular weight of insulin ---","    # Get amino acid weights from JSON","    aaWeights = data['weights']","","    # Count amino acids in insulin","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    # Multiply count by weights","    molecularWeightInsulin = sum({","        x: (aaCountInsulin[x] * aaWeights[x])","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }.values())","","    # Print calculated results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100))","","else:","    print(\"Error. Exiting program\")",""]}],[{"start":{"row":0,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["import json","","# Function to read JSON file","def readJsonFile(fileName):","    data = \"\"","    try:","        with open(fileName, 'r') as json_file:","            data = json.load(json_file)","    except IOError:","        print(\"Could not read file\", fileName)","    return data","","# Main program","data = readJsonFile(\"insulin.json\")","","if data != \"\":","    # Extract insulin sequences","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculating the molecular weight of insulin ---","    # Get amino acid weights from JSON","    aaWeights = data['weights']","","    # Count amino acids in insulin","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    # Multiply count by weights","    molecularWeightInsulin = sum({","        x: (aaCountInsulin[x] * aaWeights[x])","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }.values())","","    # Print calculated results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100))","","else:","    print(\"Error. Exiting program\")",""],"id":73},{"start":{"row":0,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["import json","","# Function to read JSON file","def readJsonFile(fileName):","    data = \"\"","    try:","        with open(fileName, 'r') as json_file:","            data = json.load(json_file)","    except IOError:","        print(\"Could not read file\", fileName)","    return data","","# Main program","data = readJsonFile(\"insulin.json\")","","if data != \"\":","    # Extract insulin sequences","    lsInsulin = data['molecules']['lsInsulin']","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    cInsulin = data['molecules']['cInsulin']","    insulin = bInsulin + aInsulin  # main insulin chain","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"lsInsulin: \" + lsInsulin)","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"cInsulin: \" + cInsulin)","    print(\"insulin sequence (b + a): \" + insulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculating the molecular weight of insulin ---","    # Get amino acid weights","    aaWeights = data['weights']","","    # Count amino acids in insulin (b + a chain only)","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    # Multiply count by weights","    molecularWeightInsulin = sum({","        x: (aaCountInsulin[x] * aaWeights[x])","        for x in aaCountInsulin","    }.values())","","    # Print calculated results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100))","","else:","    print(\"Error. Exiting program\")",""]}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["import json","","# Function to read JSON file","def readJsonFile(fileName):","    data = \"\"","    try:","        with open(fileName, 'r') as json_file:","            data = json.load(json_file)","    except IOError:","        print(\"Could not read file\", fileName)","    return data","","# Main program","data = readJsonFile(\"insulin.json\")","","if data != \"\":","    # Extract insulin sequences","    lsInsulin = data['molecules']['lsInsulin']","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    cInsulin = data['molecules']['cInsulin']","    insulin = bInsulin + aInsulin  # main insulin chain","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"lsInsulin: \" + lsInsulin)","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"cInsulin: \" + cInsulin)","    print(\"insulin sequence (b + a): \" + insulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculating the molecular weight of insulin ---","    # Get amino acid weights","    aaWeights = data['weights']","","    # Count amino acids in insulin (b + a chain only)","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    # Multiply count by weights","    molecularWeightInsulin = sum({","        x: (aaCountInsulin[x] * aaWeights[x])","        for x in aaCountInsulin","    }.values())","","    # Print calculated results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100))","","else:","    print(\"Error. Exiting program\")",""],"id":74}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["project_folder/","│","├─ files/","│   └─ insulin.json","│","├─ jsonFileHandler.py","└─ calc_weight_json.py",""],"id":75}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["'"],"id":76},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["'"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["'"]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"insert","lines":["''"],"id":77}],[{"start":{"row":7,"column":2},"end":{"row":7,"column":3},"action":"insert","lines":["'"],"id":78}],[{"start":{"row":0,"column":3},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":79}],[{"start":{"row":8,"column":3},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":80}],[{"start":{"row":3,"column":3},"end":{"row":4,"column":7},"action":"remove","lines":["files/","│   └─ "],"id":81}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":15},"end":{"row":3,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1759469173199,"hash":"1fd656a815cb1921075d508edd28a06a723cd12b"}