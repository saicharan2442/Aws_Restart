{"filter":false,"title":"calc_weight_json.py","tooltip":"/calc_weight_json.py","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["import jsonFileHandler","","# Read JSON data","data = jsonFileHandler.readJsonFile('files/insulin.json')","","if data != \"\":","    # Get insulin sequences","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculate molecular weight ---","    aaWeights = data['weights']","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    molecularWeightInsulin = sum({","        x: aaCountInsulin[x] * aaWeights[x]","        for x in aaCountInsulin","    }.values())","","    # Print results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    percent_error = ((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100","    print(\"Percent error: \" + str(percent_error))","","else:","    print(\"Error. Exiting program\")",""],"id":1}],[{"start":{"row":36,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["import jsonFileHandler","","# Read JSON data","data = jsonFileHandler.readJsonFile('files/insulin.json')","","if data != \"\":","    # Get insulin sequences","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculate molecular weight ---","    aaWeights = data['weights']","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    molecularWeightInsulin = sum({","        x: aaCountInsulin[x] * aaWeights[x]","        for x in aaCountInsulin","    }.values())","","    # Print results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    percent_error = ((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100","    print(\"Percent error: \" + str(percent_error))","","else:","    print(\"Error. Exiting program\")",""],"id":3,"ignore":true}],[{"start":{"row":0,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["import jsonFileHandler","","# Read JSON data","data = jsonFileHandler.readJsonFile('files/insulin.json')","","if data != \"\":","    # Get insulin sequences","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculate molecular weight ---","    aaWeights = data['weights']","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    molecularWeightInsulin = sum({","        x: aaCountInsulin[x] * aaWeights[x]","        for x in aaCountInsulin","    }.values())","","    # Print results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    percent_error = ((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100","    print(\"Percent error: \" + str(percent_error))","","else:","    print(\"Error. Exiting program\")",""],"id":2,"ignore":true}],[{"start":{"row":0,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["import jsonFileHandler","","# Read JSON data","data = jsonFileHandler.readJsonFile('files/insulin.json')","","if data != \"\":","    # Get insulin sequences","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    # Print sequences","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    # --- Calculate molecular weight ---","    aaWeights = data['weights']","    aaCountInsulin = {","        x: float(insulin.upper().count(x))","        for x in ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']","    }","","    molecularWeightInsulin = sum({","        x: aaCountInsulin[x] * aaWeights[x]","        for x in aaCountInsulin","    }.values())","","    # Print results","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    percent_error = ((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100","    print(\"Percent error: \" + str(percent_error))","","else:","    print(\"Error. Exiting program\")",""],"id":7},{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["import jsonFileHandler","","data = jsonFileHandler.readJsonFile('files/insulin.json')","","if data != \"\":","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","","    print(\"bInsulin: \" + bInsulin)","    print(\"aInsulin: \" + aInsulin)","    print(\"molecularWeightInsulinActual: \" + str(molecularWeightInsulinActual))","","    aaWeights = data['weights']","    aaCountInsulin = {x: float(insulin.upper().count(x)) for x in aaWeights}","    molecularWeightInsulin = sum(aaCountInsulin[x] * aaWeights[x] for x in aaCountInsulin)","","    print(\"The rough molecular weight of insulin: \" + str(molecularWeightInsulin))","    percent_error = ((molecularWeightInsulin - molecularWeightInsulinActual) / molecularWeightInsulinActual) * 100","    print(\"Percent error: \" + str(percent_error))","else:","    print(\"Error. Exiting program\")",""]}],[{"start":{"row":2,"column":42},"end":{"row":2,"column":43},"action":"remove","lines":["/"],"id":8},{"start":{"row":2,"column":41},"end":{"row":2,"column":42},"action":"remove","lines":["s"]},{"start":{"row":2,"column":40},"end":{"row":2,"column":41},"action":"remove","lines":["e"]},{"start":{"row":2,"column":39},"end":{"row":2,"column":40},"action":"remove","lines":["l"]},{"start":{"row":2,"column":38},"end":{"row":2,"column":39},"action":"remove","lines":["i"]},{"start":{"row":2,"column":37},"end":{"row":2,"column":38},"action":"remove","lines":["f"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":44},"end":{"row":5,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1759468670781,"hash":"60dc42e41581a3f28824d19bd7dafb2dbcbfe832"}