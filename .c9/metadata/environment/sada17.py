{"changed":true,"filter":false,"title":"sada17.py","tooltip":"/sada17.py","value":"#Debugging the Caesar Cipher Program\n\n'''Exercise 1: Working with the buggy Caesar cipher program - Part 1'''\n\n\n# Module Lab: Caesar Cipher Program Bug #1\n#\n# In a previous lab, you created a Caesar cipher program. This version of\n# the program is buggy. Use a debugger to find the bug and fix it.\n\n# Double the given alphabet\n'''\ndef getDoubleAlphabet(alphabet):\n    doubleAlphabet = alphabet + alphabet\n    return doubleAlphabet\n\n# Get a message to encrypt\ndef getMessage():\n    stringToEncrypt = input(\"Please enter a message to encrypt: \")\n    return stringToEncrypt\n\n# Get a cipher key\ndef getCipherKey():\n    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")\n    return shiftAmount\n\n# Encrypt message\ndef encryptMessage(message, cipherKey, alphabet):\n    encryptedMessage = \"\"\n    uppercaseMessage = \"\"\n    uppercaseMessage = message.upper()\n    for currentCharacter in uppercaseMessage:\n        position = alphabet.find(currentCharacter)\n        newPosition = position + int(cipherKey)    #newPosition = position + cipherKe //error\n        if currentCharacter in alphabet:\n            encryptedMessage = encryptedMessage + alphabet[newPosition]\n        else:\n            encryptedMessage = encryptedMessage + currentCharacter\n    return encryptedMessage\n\n# Decrypt message\ndef decryptMessage(message, cipherKey, alphabet):\n    decryptKey = -1 * int(cipherKey)\n    return encryptMessage(message, decryptKey, alphabet)\n\n# Main program logic\ndef runCaesarCipherProgram():\n    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    print(f'Alphabet: {myAlphabet}')\n    myAlphabet2 = getDoubleAlphabet(myAlphabet)\n    print(f'Alphabet2: {myAlphabet2}')\n    myMessage = getMessage()\n    print(myMessage)\n    myCipherKey = getCipherKey()\n    print(myCipherKey)\n    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)\n    print(f'Encrypted Message: {myEncryptedMessage}')\n    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)\n    print(f'Decrypted Message: {myDecryptedMessage}')\n\n# Main logic\nrunCaesarCipherProgram()\n\n'''\n\n'''Exercise 2: Working with the buggy Caesar cipher program - Part 2'''\n\n# Module Lab: Caesar Cipher Program Bug #2\n#\n# In a previous lab, you created a Caesar cipher program. This version of\n# the program is buggy. Use a debugger to find the bug and fix it.\n\n# Double the given alphabet\n'''\ndef getDoubleAlphabet(alphabet):\n    doubleAlphabet = alphabet + alphabet\n    return doubleAlphabet\n\n# Get a message to encrypt\ndef getMessage():\n    stringToEncrypt = input(\"Please enter a message to encrypt: \")\n    return stringToEncrypt\n\n# Get a cipher key\ndef getCipherKey():\n    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")\n    return shiftAmount\n\n# Encrypt message\ndef encryptMessage(message, cipherKey, alphabet):\n    encryptedMessage = \"\"\n    uppercaseMessage = \"\"\n    uppercaseMessage = message.upper()               # uppercaseMessage = message //error\n    for currentCharacter in uppercaseMessage:\n        position = alphabet.find(currentCharacter)\n        newPosition = position + int(cipherKey)\n        if currentCharacter in alphabet:\n            encryptedMessage = encryptedMessage + alphabet[newPosition]\n        else:\n            encryptedMessage = encryptedMessage + currentCharacter\n    return encryptedMessage\n\n# Decrypt message\ndef decryptMessage(message, cipherKey, alphabet):\n    decryptKey = -1 * int(cipherKey)\n    return encryptMessage(message, decryptKey, alphabet)\n\n# Main program logic\ndef runCaesarCipherProgram():\n    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    print(f'Alphabet: {myAlphabet}')\n    myAlphabet2 = getDoubleAlphabet(myAlphabet)\n    print(f'Alphabet2: {myAlphabet2}')\n    myMessage = getMessage()\n    print(myMessage)\n    myCipherKey = getCipherKey()\n    print(myCipherKey)\n    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)\n    print(f'Encrypted Message: {myEncryptedMessage}')\n    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)\n    print(f'Decrypted Message: {myDecryptedMessage}')\n\n# Main logic\nrunCaesarCipherProgram()\n'''\n\n'''#Exercise 3: Working with the buggy Caesar cipher program - Part 3'''\n\n# Module Lab: Caesar Cipher Program Bug #3\n#\n# In a previous lab, you created a Caesar cipher program. This version of\n# the program is buggy. Use a debugger to find the bug and fix it.\n\n# Double the given alphabet\n\n'''\ndef getDoubleAlphabet(alphabet):\n    doubleAlphabet = alphabet + alphabet\n    return doubleAlphabet\n\n# Get a message to encrypt\ndef getMessage():\n    stringToEncrypt = input(\"Please enter a message to encrypt: \")\n    return stringToEncrypt\n\n# Get a cipher key\ndef getCipherKey():\n    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")\n    return shiftAmount\n\n# Encrypt message\ndef encryptMessage(message, cipherKey, alphabet):\n    encryptedMessage = \"\"\n    uppercaseMessage = \"\"\n    uppercaseMessage = message.upper()\n    for currentCharacter in uppercaseMessage:\n        position = alphabet.find(currentCharacter)\n        newPosition = position + int(cipherKey)\n        if currentCharacter in alphabet:\n            encryptedMessage = encryptedMessage + alphabet[newPosition]\n        else:\n            encryptedMessage = encryptedMessage + currentCharacter\n    return encryptedMessage\n\n# Decrypt message\ndef decryptMessage(message, cipherKey, alphabet):\n    decryptKey = -1 * int(cipherKey)\n\n    return encryptMessage(message, decryptKey, alphabet)     #return encryptMessage(message, cipherKey, alphabet)\n    \n# Main program logic\ndef runCaesarCipherProgram():\n    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    print(f'Alphabet: {myAlphabet}')\n    myAlphabet2 = getDoubleAlphabet(myAlphabet)\n    print(f'Alphabet2: {myAlphabet2}')\n    myMessage = getMessage()\n    print(myMessage)\n    myCipherKey = getCipherKey()\n    print(myCipherKey)\n    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)\n    print(f'Encrypted Message: {myEncryptedMessage}')\n    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)\n    print(f'Decrypted Message: {myDecryptedMessage}')\n\n# Main logic\nrunCaesarCipherProgram()\n\n'''\n\n#Exercise 4: Working with the buggy Caesar cipher program - Part 4\n\n# Module Lab: Caesar Cipher Program Bug #4\n#\n# In a previous lab, you created a Caesar cipher program. This version of\n# the program is buggy. Use a debugger to find the bug and fix it.\n\n# Double the given alphabet\ndef getDoubleAlphabet(alphabet):\n    doubleAlphabet = alphabet + alphabet\n    return doubleAlphabet\n\n# Get a message to encrypt\ndef getMessage():\n    stringToEncrypt = input(\"Please enter a message to encrypt: \")\n    return stringToEncrypt\n\n# Get a cipher key\ndef getCipherKey():\n    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")\n    return shiftAmount\n\n# Encrypt message\ndef encryptMessage(message, cipherKey, alphabet):\n    encryptedMessage = \"\"\n    uppercaseMessage = \"\"\n    uppercaseMessage = message.upper()\n    for currentCharacter in uppercaseMessage:\n        position = alphabet.find(currentCharacter)\n        newPosition = position + int(cipherKey)\n        if currentCharacter in alphabet:\n            encryptedMessage = encryptedMessage + alphabet[newPosition]\n        else:\n            encryptedMessage = encryptedMessage + currentCharacter\n    return encryptedMessage\n\n# Decrypt message\ndef decryptMessage(message, cipherKey, alphabet):\n    decryptKey = -1 * int(cipherKey)\n    return encryptMessage(message, decryptKey, alphabet)\n\n# Main program logic\ndef runCaesarCipherProgram():\n    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    print(f'Alphabet: {myAlphabet}')\n    myAlphabet2 = getDoubleAlphabet(myAlphabet)\n    print(f'Alphabet2: {myAlphabet2}')\n    myMessage = getMessage()\n    print(myMessage)\n    myCipherKey = getCipherKey()\n    print(myCipherKey)\n    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)\n    print(f'Encrypted Message: {myEncryptedMessage}')\n    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)\n    \n    print(f'Decrypted Message: {myDecryptedMessage}') #print(f'Decrypted Message: {myEncryptedMessage}')\n\n# Main logic\nrunCaesarCipherProgram()","undoManager":{"mark":99,"position":100,"stack":[[{"start":{"row":91,"column":34},"end":{"row":91,"column":35},"action":"insert","lines":["e"],"id":55},{"start":{"row":91,"column":35},"end":{"row":91,"column":36},"action":"insert","lines":["r"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"remove","lines":["upper"],"id":60},{"start":{"row":91,"column":31},"end":{"row":91,"column":33},"action":"insert","lines":["()"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":32},"action":"insert","lines":["u"],"id":61},{"start":{"row":91,"column":32},"end":{"row":91,"column":33},"action":"insert","lines":["p"]},{"start":{"row":91,"column":33},"end":{"row":91,"column":34},"action":"insert","lines":["p"]},{"start":{"row":91,"column":34},"end":{"row":91,"column":35},"action":"insert","lines":["e"]},{"start":{"row":91,"column":35},"end":{"row":91,"column":36},"action":"insert","lines":["r"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"remove","lines":["upper"],"id":62},{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"insert","lines":["upper"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"remove","lines":["upper"],"id":63},{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"insert","lines":["upper"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":32},"action":"remove","lines":["u"],"id":64}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":32},"action":"insert","lines":["U"],"id":65}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":32},"action":"remove","lines":["U"],"id":66}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":35},"action":"remove","lines":["pper"],"id":67},{"start":{"row":91,"column":31},"end":{"row":91,"column":41},"action":"insert","lines":["capitalize"]}],[{"start":{"row":91,"column":40},"end":{"row":91,"column":41},"action":"remove","lines":["e"],"id":68},{"start":{"row":91,"column":39},"end":{"row":91,"column":40},"action":"remove","lines":["z"]},{"start":{"row":91,"column":38},"end":{"row":91,"column":39},"action":"remove","lines":["i"]},{"start":{"row":91,"column":37},"end":{"row":91,"column":38},"action":"remove","lines":["l"]},{"start":{"row":91,"column":36},"end":{"row":91,"column":37},"action":"remove","lines":["a"]},{"start":{"row":91,"column":35},"end":{"row":91,"column":36},"action":"remove","lines":["t"]},{"start":{"row":91,"column":34},"end":{"row":91,"column":35},"action":"remove","lines":["i"]},{"start":{"row":91,"column":33},"end":{"row":91,"column":34},"action":"remove","lines":["p"]},{"start":{"row":91,"column":32},"end":{"row":91,"column":33},"action":"remove","lines":["a"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":32},"action":"remove","lines":["c"],"id":69}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":32},"action":"insert","lines":["u"],"id":70},{"start":{"row":91,"column":32},"end":{"row":91,"column":33},"action":"insert","lines":["p"]},{"start":{"row":91,"column":33},"end":{"row":91,"column":34},"action":"insert","lines":["p"]}],[{"start":{"row":91,"column":34},"end":{"row":91,"column":35},"action":"insert","lines":["e"],"id":71},{"start":{"row":91,"column":35},"end":{"row":91,"column":36},"action":"insert","lines":["r"]}],[{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"remove","lines":["upper"],"id":72},{"start":{"row":91,"column":31},"end":{"row":91,"column":36},"action":"insert","lines":["upper"]}],[{"start":{"row":122,"column":24},"end":{"row":123,"column":0},"action":"insert","lines":["",""],"id":73}],[{"start":{"row":123,"column":0},"end":{"row":123,"column":2},"action":"insert","lines":["''"],"id":74}],[{"start":{"row":123,"column":2},"end":{"row":123,"column":3},"action":"insert","lines":["'"],"id":75}],[{"start":{"row":73,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["",""],"id":76}],[{"start":{"row":73,"column":0},"end":{"row":73,"column":2},"action":"insert","lines":["''"],"id":77}],[{"start":{"row":73,"column":2},"end":{"row":73,"column":3},"action":"insert","lines":["'"],"id":78}],[{"start":{"row":63,"column":2},"end":{"row":63,"column":3},"action":"remove","lines":["'"],"id":79},{"start":{"row":63,"column":1},"end":{"row":63,"column":2},"action":"remove","lines":["'"]},{"start":{"row":63,"column":0},"end":{"row":63,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"remove","lines":["'"],"id":80},{"start":{"row":11,"column":1},"end":{"row":11,"column":2},"action":"remove","lines":["'"]},{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":73,"column":2},"end":{"row":73,"column":3},"action":"remove","lines":["'"],"id":81},{"start":{"row":73,"column":1},"end":{"row":73,"column":2},"action":"remove","lines":["'"]},{"start":{"row":73,"column":0},"end":{"row":73,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":124,"column":2},"end":{"row":124,"column":3},"action":"remove","lines":["'"],"id":82},{"start":{"row":124,"column":1},"end":{"row":124,"column":2},"action":"remove","lines":["'"]},{"start":{"row":124,"column":0},"end":{"row":124,"column":1},"action":"remove","lines":["'"]}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":2},"action":"insert","lines":["''"],"id":83}],[{"start":{"row":63,"column":2},"end":{"row":63,"column":3},"action":"insert","lines":["'"],"id":84}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"insert","lines":["''"],"id":85}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["'"],"id":86}],[{"start":{"row":124,"column":0},"end":{"row":124,"column":2},"action":"insert","lines":["''"],"id":87}],[{"start":{"row":124,"column":2},"end":{"row":124,"column":3},"action":"insert","lines":["'"],"id":88}],[{"start":{"row":73,"column":0},"end":{"row":73,"column":2},"action":"insert","lines":["''"],"id":89}],[{"start":{"row":73,"column":2},"end":{"row":73,"column":3},"action":"insert","lines":["'"],"id":90}],[{"start":{"row":73,"column":3},"end":{"row":74,"column":0},"action":"insert","lines":["",""],"id":91},{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"remove","lines":["",""],"id":92},{"start":{"row":73,"column":3},"end":{"row":74,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":124,"column":3},"end":{"row":125,"column":0},"action":"insert","lines":["",""],"id":93},{"start":{"row":125,"column":0},"end":{"row":126,"column":0},"action":"insert","lines":["",""]},{"start":{"row":126,"column":0},"end":{"row":127,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":126,"column":0},"end":{"row":126,"column":1},"action":"insert","lines":["#"],"id":94}],[{"start":{"row":126,"column":1},"end":{"row":127,"column":0},"action":"insert","lines":["Exercise 3: Working with the buggy Caesar cipher program - Part 3",""],"id":95}],[{"start":{"row":126,"column":0},"end":{"row":126,"column":1},"action":"insert","lines":["'"],"id":96},{"start":{"row":126,"column":1},"end":{"row":126,"column":2},"action":"insert","lines":["'"]},{"start":{"row":126,"column":2},"end":{"row":126,"column":3},"action":"insert","lines":["'"]}],[{"start":{"row":126,"column":69},"end":{"row":126,"column":70},"action":"insert","lines":["'"],"id":97},{"start":{"row":126,"column":70},"end":{"row":126,"column":71},"action":"insert","lines":["'"]},{"start":{"row":126,"column":71},"end":{"row":126,"column":72},"action":"insert","lines":["'"]}],[{"start":{"row":126,"column":72},"end":{"row":127,"column":0},"action":"insert","lines":["",""],"id":98},{"start":{"row":127,"column":0},"end":{"row":128,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":128,"column":0},"end":{"row":183,"column":24},"action":"insert","lines":["# Module Lab: Caesar Cipher Program Bug #3","#","# In a previous lab, you created a Caesar cipher program. This version of","# the program is buggy. Use a debugger to find the bug and fix it.","","# Double the given alphabet","def getDoubleAlphabet(alphabet):","    doubleAlphabet = alphabet + alphabet","    return doubleAlphabet","","# Get a message to encrypt","def getMessage():","    stringToEncrypt = input(\"Please enter a message to encrypt: \")","    return stringToEncrypt","","# Get a cipher key","def getCipherKey():","    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")","    return shiftAmount","","# Encrypt message","def encryptMessage(message, cipherKey, alphabet):","    encryptedMessage = \"\"","    uppercaseMessage = \"\"","    uppercaseMessage = message.upper()","    for currentCharacter in uppercaseMessage:","        position = alphabet.find(currentCharacter)","        newPosition = position + int(cipherKey)","        if currentCharacter in alphabet:","            encryptedMessage = encryptedMessage + alphabet[newPosition]","        else:","            encryptedMessage = encryptedMessage + currentCharacter","    return encryptedMessage","","# Decrypt message","def decryptMessage(message, cipherKey, alphabet):","    decryptKey = -1 * int(cipherKey)","    return encryptMessage(message, cipherKey, alphabet)","","# Main program logic","def runCaesarCipherProgram():","    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"","    print(f'Alphabet: {myAlphabet}')","    myAlphabet2 = getDoubleAlphabet(myAlphabet)","    print(f'Alphabet2: {myAlphabet2}')","    myMessage = getMessage()","    print(myMessage)","    myCipherKey = getCipherKey()","    print(myCipherKey)","    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)","    print(f'Encrypted Message: {myEncryptedMessage}')","    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)","    print(f'Decrypted Message: {myDecryptedMessage}')","","# Main logic","runCaesarCipherProgram()"],"id":99}],[{"start":{"row":32,"column":50},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":100},{"start":{"row":33,"column":0},"end":{"row":33,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":33,"column":8},"end":{"row":33,"column":9},"action":"insert","lines":["#"],"id":101}],[{"start":{"row":33,"column":9},"end":{"row":34,"column":0},"action":"insert","lines":["        newPosition = position + int(cipherKey)",""],"id":102}],[{"start":{"row":33,"column":12},"end":{"row":33,"column":16},"action":"remove","lines":["    "],"id":103},{"start":{"row":33,"column":11},"end":{"row":33,"column":12},"action":"remove","lines":[" "]},{"start":{"row":33,"column":10},"end":{"row":33,"column":11},"action":"remove","lines":[" "]},{"start":{"row":33,"column":9},"end":{"row":33,"column":10},"action":"remove","lines":[" "]}],[{"start":{"row":33,"column":9},"end":{"row":33,"column":10},"action":"remove","lines":[" "],"id":104}],[{"start":{"row":33,"column":37},"end":{"row":33,"column":38},"action":"remove","lines":["("],"id":105},{"start":{"row":33,"column":36},"end":{"row":33,"column":37},"action":"remove","lines":["t"]},{"start":{"row":33,"column":35},"end":{"row":33,"column":36},"action":"remove","lines":["n"]},{"start":{"row":33,"column":34},"end":{"row":33,"column":35},"action":"remove","lines":["i"]}],[{"start":{"row":33,"column":43},"end":{"row":33,"column":44},"action":"remove","lines":[")"],"id":106},{"start":{"row":33,"column":42},"end":{"row":33,"column":43},"action":"remove","lines":["y"]}],[{"start":{"row":33,"column":7},"end":{"row":33,"column":8},"action":"insert","lines":[" "],"id":107},{"start":{"row":33,"column":8},"end":{"row":33,"column":9},"action":"insert","lines":[" "]},{"start":{"row":33,"column":9},"end":{"row":33,"column":10},"action":"insert","lines":[" "]},{"start":{"row":33,"column":10},"end":{"row":33,"column":11},"action":"insert","lines":[" "]},{"start":{"row":33,"column":11},"end":{"row":33,"column":12},"action":"insert","lines":[" "]},{"start":{"row":33,"column":12},"end":{"row":33,"column":13},"action":"insert","lines":[" "]},{"start":{"row":33,"column":13},"end":{"row":33,"column":14},"action":"insert","lines":[" "]},{"start":{"row":33,"column":14},"end":{"row":33,"column":15},"action":"insert","lines":[" "]},{"start":{"row":33,"column":15},"end":{"row":33,"column":16},"action":"insert","lines":[" "]},{"start":{"row":33,"column":16},"end":{"row":33,"column":17},"action":"insert","lines":[" "]},{"start":{"row":33,"column":17},"end":{"row":33,"column":18},"action":"insert","lines":[" "]},{"start":{"row":33,"column":18},"end":{"row":33,"column":19},"action":"insert","lines":[" "]},{"start":{"row":33,"column":19},"end":{"row":33,"column":20},"action":"insert","lines":[" "]},{"start":{"row":33,"column":20},"end":{"row":33,"column":21},"action":"insert","lines":[" "]},{"start":{"row":33,"column":21},"end":{"row":33,"column":22},"action":"insert","lines":[" "]},{"start":{"row":33,"column":22},"end":{"row":33,"column":23},"action":"insert","lines":[" "]},{"start":{"row":33,"column":23},"end":{"row":33,"column":24},"action":"insert","lines":[" "]},{"start":{"row":33,"column":24},"end":{"row":33,"column":25},"action":"insert","lines":[" "]},{"start":{"row":33,"column":25},"end":{"row":33,"column":26},"action":"insert","lines":[" "]},{"start":{"row":33,"column":26},"end":{"row":33,"column":27},"action":"insert","lines":[" "]},{"start":{"row":33,"column":27},"end":{"row":33,"column":28},"action":"insert","lines":[" "]},{"start":{"row":33,"column":28},"end":{"row":33,"column":29},"action":"insert","lines":[" "]},{"start":{"row":33,"column":29},"end":{"row":33,"column":30},"action":"insert","lines":[" "]},{"start":{"row":33,"column":30},"end":{"row":33,"column":31},"action":"insert","lines":[" "]},{"start":{"row":33,"column":31},"end":{"row":33,"column":32},"action":"insert","lines":[" "]},{"start":{"row":33,"column":32},"end":{"row":33,"column":33},"action":"insert","lines":[" "]},{"start":{"row":33,"column":33},"end":{"row":33,"column":34},"action":"insert","lines":[" "]},{"start":{"row":33,"column":34},"end":{"row":33,"column":35},"action":"insert","lines":[" "]},{"start":{"row":33,"column":35},"end":{"row":33,"column":36},"action":"insert","lines":[" "]},{"start":{"row":33,"column":36},"end":{"row":33,"column":37},"action":"insert","lines":[" "]},{"start":{"row":33,"column":37},"end":{"row":33,"column":38},"action":"insert","lines":[" "]},{"start":{"row":33,"column":38},"end":{"row":33,"column":39},"action":"insert","lines":[" "]},{"start":{"row":33,"column":39},"end":{"row":33,"column":40},"action":"insert","lines":[" "]},{"start":{"row":33,"column":40},"end":{"row":33,"column":41},"action":"insert","lines":[" "]},{"start":{"row":33,"column":41},"end":{"row":33,"column":42},"action":"insert","lines":[" "]},{"start":{"row":33,"column":42},"end":{"row":33,"column":43},"action":"insert","lines":[" "]},{"start":{"row":33,"column":43},"end":{"row":33,"column":44},"action":"insert","lines":[" "]},{"start":{"row":33,"column":44},"end":{"row":33,"column":45},"action":"insert","lines":[" "]},{"start":{"row":33,"column":45},"end":{"row":33,"column":46},"action":"insert","lines":[" "]},{"start":{"row":33,"column":46},"end":{"row":33,"column":47},"action":"insert","lines":[" "]},{"start":{"row":33,"column":47},"end":{"row":33,"column":48},"action":"insert","lines":[" "]},{"start":{"row":33,"column":48},"end":{"row":33,"column":49},"action":"insert","lines":[" "]},{"start":{"row":33,"column":49},"end":{"row":33,"column":50},"action":"insert","lines":[" "]},{"start":{"row":33,"column":50},"end":{"row":33,"column":51},"action":"insert","lines":[" "]}],[{"start":{"row":35,"column":6},"end":{"row":35,"column":7},"action":"remove","lines":[" "],"id":108}],[{"start":{"row":35,"column":7},"end":{"row":35,"column":8},"action":"insert","lines":[" "],"id":109},{"start":{"row":35,"column":8},"end":{"row":35,"column":9},"action":"insert","lines":[" "]}],[{"start":{"row":34,"column":0},"end":{"row":35,"column":9},"action":"remove","lines":["","         "],"id":110}],[{"start":{"row":34,"column":0},"end":{"row":34,"column":1},"action":"insert","lines":[" "],"id":111},{"start":{"row":34,"column":1},"end":{"row":34,"column":2},"action":"insert","lines":[" "]},{"start":{"row":34,"column":2},"end":{"row":34,"column":3},"action":"insert","lines":[" "]},{"start":{"row":34,"column":3},"end":{"row":34,"column":4},"action":"insert","lines":[" "]},{"start":{"row":34,"column":4},"end":{"row":34,"column":5},"action":"insert","lines":[" "]},{"start":{"row":34,"column":5},"end":{"row":34,"column":6},"action":"insert","lines":[" "]},{"start":{"row":34,"column":6},"end":{"row":34,"column":7},"action":"insert","lines":[" "]},{"start":{"row":34,"column":7},"end":{"row":34,"column":8},"action":"insert","lines":[" "]}],[{"start":{"row":93,"column":38},"end":{"row":93,"column":39},"action":"insert","lines":[" "],"id":112},{"start":{"row":93,"column":39},"end":{"row":93,"column":40},"action":"insert","lines":[" "]}],[{"start":{"row":93,"column":40},"end":{"row":93,"column":41},"action":"insert","lines":["#"],"id":113}],[{"start":{"row":93,"column":41},"end":{"row":94,"column":0},"action":"insert","lines":["    uppercaseMessage = message.upper()",""],"id":114}],[{"start":{"row":93,"column":79},"end":{"row":94,"column":0},"action":"remove","lines":["",""],"id":115}],[{"start":{"row":93,"column":78},"end":{"row":93,"column":79},"action":"remove","lines":[")"],"id":116},{"start":{"row":93,"column":77},"end":{"row":93,"column":78},"action":"remove","lines":["("]},{"start":{"row":93,"column":76},"end":{"row":93,"column":77},"action":"remove","lines":["r"]},{"start":{"row":93,"column":75},"end":{"row":93,"column":76},"action":"remove","lines":["e"]},{"start":{"row":93,"column":74},"end":{"row":93,"column":75},"action":"remove","lines":["p"]},{"start":{"row":93,"column":73},"end":{"row":93,"column":74},"action":"remove","lines":["p"]},{"start":{"row":93,"column":72},"end":{"row":93,"column":73},"action":"remove","lines":["u"]},{"start":{"row":93,"column":71},"end":{"row":93,"column":72},"action":"remove","lines":["."]}],[{"start":{"row":93,"column":43},"end":{"row":93,"column":44},"action":"remove","lines":[" "],"id":117},{"start":{"row":93,"column":42},"end":{"row":93,"column":43},"action":"remove","lines":[" "]},{"start":{"row":93,"column":41},"end":{"row":93,"column":42},"action":"remove","lines":[" "]}],[{"start":{"row":93,"column":40},"end":{"row":93,"column":41},"action":"insert","lines":[" "],"id":118},{"start":{"row":93,"column":41},"end":{"row":93,"column":42},"action":"insert","lines":[" "]},{"start":{"row":93,"column":42},"end":{"row":93,"column":43},"action":"insert","lines":[" "]},{"start":{"row":93,"column":43},"end":{"row":93,"column":44},"action":"insert","lines":[" "]},{"start":{"row":93,"column":44},"end":{"row":93,"column":45},"action":"insert","lines":[" "]},{"start":{"row":93,"column":45},"end":{"row":93,"column":46},"action":"insert","lines":[" "]},{"start":{"row":93,"column":46},"end":{"row":93,"column":47},"action":"insert","lines":[" "]},{"start":{"row":93,"column":47},"end":{"row":93,"column":48},"action":"insert","lines":[" "]},{"start":{"row":93,"column":48},"end":{"row":93,"column":49},"action":"insert","lines":[" "]},{"start":{"row":93,"column":49},"end":{"row":93,"column":50},"action":"insert","lines":[" "]},{"start":{"row":93,"column":50},"end":{"row":93,"column":51},"action":"insert","lines":[" "]},{"start":{"row":93,"column":51},"end":{"row":93,"column":52},"action":"insert","lines":[" "]}],[{"start":{"row":93,"column":52},"end":{"row":93,"column":53},"action":"insert","lines":[" "],"id":119}],[{"start":{"row":93,"column":81},"end":{"row":93,"column":82},"action":"insert","lines":[" "],"id":120},{"start":{"row":93,"column":82},"end":{"row":93,"column":83},"action":"insert","lines":["."]}],[{"start":{"row":93,"column":82},"end":{"row":93,"column":83},"action":"remove","lines":["."],"id":121}],[{"start":{"row":93,"column":82},"end":{"row":93,"column":83},"action":"insert","lines":["/"],"id":122},{"start":{"row":93,"column":83},"end":{"row":93,"column":84},"action":"insert","lines":["/"]},{"start":{"row":93,"column":84},"end":{"row":93,"column":85},"action":"insert","lines":["e"]},{"start":{"row":93,"column":85},"end":{"row":93,"column":86},"action":"insert","lines":["r"]},{"start":{"row":93,"column":86},"end":{"row":93,"column":87},"action":"insert","lines":["r"]},{"start":{"row":93,"column":87},"end":{"row":93,"column":88},"action":"insert","lines":["o"]},{"start":{"row":93,"column":88},"end":{"row":93,"column":89},"action":"insert","lines":["e"]}],[{"start":{"row":93,"column":88},"end":{"row":93,"column":89},"action":"remove","lines":["e"],"id":123}],[{"start":{"row":93,"column":88},"end":{"row":93,"column":89},"action":"insert","lines":["r"],"id":124}],[{"start":{"row":33,"column":86},"end":{"row":33,"column":87},"action":"insert","lines":[" "],"id":125},{"start":{"row":33,"column":87},"end":{"row":33,"column":88},"action":"insert","lines":["/"]},{"start":{"row":33,"column":88},"end":{"row":33,"column":89},"action":"insert","lines":["/"]},{"start":{"row":33,"column":89},"end":{"row":33,"column":90},"action":"insert","lines":["e"]},{"start":{"row":33,"column":90},"end":{"row":33,"column":91},"action":"insert","lines":["r"]},{"start":{"row":33,"column":91},"end":{"row":33,"column":92},"action":"insert","lines":["r"]}],[{"start":{"row":33,"column":92},"end":{"row":33,"column":93},"action":"insert","lines":["o"],"id":126},{"start":{"row":33,"column":93},"end":{"row":33,"column":94},"action":"insert","lines":["r"]}],[{"start":{"row":33,"column":0},"end":{"row":34,"column":0},"action":"remove","lines":["                                                    #newPosition = position + cipherKe //error",""],"id":127}],[{"start":{"row":33,"column":47},"end":{"row":33,"column":48},"action":"insert","lines":[" "],"id":128},{"start":{"row":33,"column":48},"end":{"row":33,"column":49},"action":"insert","lines":[" "]}],[{"start":{"row":33,"column":49},"end":{"row":34,"column":0},"action":"insert","lines":["                                                    #newPosition = position + cipherKe //error",""],"id":129}],[{"start":{"row":33,"column":54},"end":{"row":33,"column":98},"action":"remove","lines":["                                            "],"id":130},{"start":{"row":33,"column":53},"end":{"row":33,"column":54},"action":"remove","lines":[" "]},{"start":{"row":33,"column":52},"end":{"row":33,"column":53},"action":"remove","lines":[" "]},{"start":{"row":33,"column":48},"end":{"row":33,"column":52},"action":"remove","lines":["    "]}],[{"start":{"row":33,"column":93},"end":{"row":34,"column":0},"action":"remove","lines":["",""],"id":131}],[{"start":{"row":165,"column":4},"end":{"row":165,"column":5},"action":"insert","lines":["#"],"id":132}],[{"start":{"row":166,"column":0},"end":{"row":166,"column":1},"action":"insert","lines":[" "],"id":133},{"start":{"row":166,"column":1},"end":{"row":166,"column":2},"action":"insert","lines":[" "]},{"start":{"row":166,"column":2},"end":{"row":166,"column":3},"action":"insert","lines":[" "]},{"start":{"row":166,"column":3},"end":{"row":166,"column":4},"action":"insert","lines":[" "]},{"start":{"row":166,"column":4},"end":{"row":167,"column":0},"action":"insert","lines":["",""]},{"start":{"row":167,"column":0},"end":{"row":167,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":166,"column":4},"end":{"row":166,"column":56},"action":"insert","lines":["return encryptMessage(message, decryptKey, alphabet)"],"id":134}],[{"start":{"row":184,"column":0},"end":{"row":184,"column":1},"action":"insert","lines":["s"],"id":135},{"start":{"row":184,"column":1},"end":{"row":184,"column":2},"action":"insert","lines":["a"]},{"start":{"row":184,"column":2},"end":{"row":184,"column":3},"action":"insert","lines":["i"]},{"start":{"row":184,"column":3},"end":{"row":184,"column":4},"action":"insert","lines":["c"]},{"start":{"row":184,"column":4},"end":{"row":184,"column":5},"action":"insert","lines":["h"]},{"start":{"row":184,"column":5},"end":{"row":184,"column":6},"action":"insert","lines":["a"]},{"start":{"row":184,"column":6},"end":{"row":184,"column":7},"action":"insert","lines":["r"]},{"start":{"row":184,"column":7},"end":{"row":184,"column":8},"action":"insert","lines":["a"]},{"start":{"row":184,"column":8},"end":{"row":184,"column":9},"action":"insert","lines":["n"]}],[{"start":{"row":184,"column":8},"end":{"row":184,"column":9},"action":"remove","lines":["n"],"id":136},{"start":{"row":184,"column":7},"end":{"row":184,"column":8},"action":"remove","lines":["a"]},{"start":{"row":184,"column":6},"end":{"row":184,"column":7},"action":"remove","lines":["r"]},{"start":{"row":184,"column":5},"end":{"row":184,"column":6},"action":"remove","lines":["a"]},{"start":{"row":184,"column":4},"end":{"row":184,"column":5},"action":"remove","lines":["h"]},{"start":{"row":184,"column":3},"end":{"row":184,"column":4},"action":"remove","lines":["c"]},{"start":{"row":184,"column":2},"end":{"row":184,"column":3},"action":"remove","lines":["i"]},{"start":{"row":184,"column":1},"end":{"row":184,"column":2},"action":"remove","lines":["a"]},{"start":{"row":184,"column":0},"end":{"row":184,"column":1},"action":"remove","lines":["s"]}],[{"start":{"row":186,"column":0},"end":{"row":186,"column":2},"action":"insert","lines":["''"],"id":137}],[{"start":{"row":186,"column":2},"end":{"row":186,"column":3},"action":"insert","lines":["'"],"id":138}],[{"start":{"row":133,"column":27},"end":{"row":134,"column":0},"action":"insert","lines":["",""],"id":139},{"start":{"row":134,"column":0},"end":{"row":135,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":135,"column":0},"end":{"row":135,"column":2},"action":"insert","lines":["''"],"id":140}],[{"start":{"row":135,"column":2},"end":{"row":135,"column":3},"action":"insert","lines":["'"],"id":141}],[{"start":{"row":167,"column":0},"end":{"row":167,"column":56},"action":"remove","lines":["    #return encryptMessage(message, cipherKey, alphabet)"],"id":142}],[{"start":{"row":168,"column":56},"end":{"row":168,"column":57},"action":"insert","lines":[" "],"id":143}],[{"start":{"row":168,"column":57},"end":{"row":168,"column":113},"action":"insert","lines":["    #return encryptMessage(message, cipherKey, alphabet)"],"id":144}],[{"start":{"row":188,"column":3},"end":{"row":189,"column":0},"action":"insert","lines":["",""],"id":145},{"start":{"row":189,"column":0},"end":{"row":190,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":190,"column":0},"end":{"row":190,"column":1},"action":"insert","lines":["#"],"id":146}],[{"start":{"row":190,"column":1},"end":{"row":191,"column":0},"action":"insert","lines":["Exercise 4: Working with the buggy Caesar cipher program - Part 4",""],"id":147}],[{"start":{"row":191,"column":0},"end":{"row":192,"column":0},"action":"insert","lines":["",""],"id":148}],[{"start":{"row":192,"column":0},"end":{"row":247,"column":24},"action":"insert","lines":["# Module Lab: Caesar Cipher Program Bug #4","#","# In a previous lab, you created a Caesar cipher program. This version of","# the program is buggy. Use a debugger to find the bug and fix it.","","# Double the given alphabet","def getDoubleAlphabet(alphabet):","    doubleAlphabet = alphabet + alphabet","    return doubleAlphabet","","# Get a message to encrypt","def getMessage():","    stringToEncrypt = input(\"Please enter a message to encrypt: \")","    return stringToEncrypt","","# Get a cipher key","def getCipherKey():","    shiftAmount = input(\"Please enter a key (whole number from 1-25): \")","    return shiftAmount","","# Encrypt message","def encryptMessage(message, cipherKey, alphabet):","    encryptedMessage = \"\"","    uppercaseMessage = \"\"","    uppercaseMessage = message.upper()","    for currentCharacter in uppercaseMessage:","        position = alphabet.find(currentCharacter)","        newPosition = position + int(cipherKey)","        if currentCharacter in alphabet:","            encryptedMessage = encryptedMessage + alphabet[newPosition]","        else:","            encryptedMessage = encryptedMessage + currentCharacter","    return encryptedMessage","","# Decrypt message","def decryptMessage(message, cipherKey, alphabet):","    decryptKey = -1 * int(cipherKey)","    return encryptMessage(message, decryptKey, alphabet)","","# Main program logic","def runCaesarCipherProgram():","    myAlphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"","    print(f'Alphabet: {myAlphabet}')","    myAlphabet2 = getDoubleAlphabet(myAlphabet)","    print(f'Alphabet2: {myAlphabet2}')","    myMessage = getMessage()","    print(myMessage)","    myCipherKey = getCipherKey()","    print(myCipherKey)","    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)","    print(f'Encrypted Message: {myEncryptedMessage}')","    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)","    print(f'Decrypted Message: {myEncryptedMessage}')","","# Main logic","runCaesarCipherProgram()"],"id":149}],[{"start":{"row":244,"column":35},"end":{"row":244,"column":36},"action":"remove","lines":["n"],"id":150},{"start":{"row":244,"column":34},"end":{"row":244,"column":35},"action":"remove","lines":["E"]}],[{"start":{"row":244,"column":34},"end":{"row":244,"column":35},"action":"insert","lines":["d"],"id":151},{"start":{"row":244,"column":35},"end":{"row":244,"column":36},"action":"insert","lines":["e"]}],[{"start":{"row":244,"column":35},"end":{"row":244,"column":36},"action":"remove","lines":["e"],"id":152},{"start":{"row":244,"column":34},"end":{"row":244,"column":35},"action":"remove","lines":["d"]}],[{"start":{"row":244,"column":34},"end":{"row":244,"column":35},"action":"insert","lines":["D"],"id":153},{"start":{"row":244,"column":35},"end":{"row":244,"column":36},"action":"insert","lines":["e"]}],[{"start":{"row":244,"column":32},"end":{"row":244,"column":50},"action":"remove","lines":["myDecryptedMessage"],"id":154},{"start":{"row":244,"column":32},"end":{"row":244,"column":50},"action":"insert","lines":["myDecryptedMessage"]}],[{"start":{"row":244,"column":53},"end":{"row":244,"column":54},"action":"insert","lines":[" "],"id":155},{"start":{"row":244,"column":54},"end":{"row":244,"column":55},"action":"insert","lines":["#"]}],[{"start":{"row":244,"column":55},"end":{"row":244,"column":104},"action":"insert","lines":["print(f'Decrypted Message: {myDecryptedMessage}')"],"id":156}],[{"start":{"row":244,"column":86},"end":{"row":244,"column":87},"action":"remove","lines":["e"],"id":157},{"start":{"row":244,"column":85},"end":{"row":244,"column":86},"action":"remove","lines":["D"]}],[{"start":{"row":244,"column":85},"end":{"row":244,"column":86},"action":"insert","lines":["E"],"id":158},{"start":{"row":244,"column":86},"end":{"row":244,"column":87},"action":"insert","lines":["n"]}],[{"start":{"row":243,"column":85},"end":{"row":244,"column":0},"action":"insert","lines":["",""],"id":159},{"start":{"row":244,"column":0},"end":{"row":244,"column":4},"action":"insert","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":2182,"scrollleft":0,"selection":{"start":{"row":248,"column":24},"end":{"row":248,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":144,"state":"qstring3","mode":"ace/mode/python"}}}